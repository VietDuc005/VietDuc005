const apiUrl = "https://localhost:7075/api/hanghoa/"; // ƒê·ªïi theo API c·ªßa b·∫°n

// üîπ L·∫•y danh s√°ch h√†ng h√≥a t·ª´ API v√† hi·ªÉn th·ªã tr√™n trang
async function fetchGoods() {
    const response = await fetch(apiUrl);
    const goods = await response.json();
    
    const tableBody = document.getElementById("goodsTableBody");
    tableBody.innerHTML = ""; // X√≥a d·ªØ li·ªáu c≈© tr∆∞·ªõc khi c·∫≠p nh·∫≠t

    goods.forEach(hangHoa => {
        const row = `
            <tr>
                <td>${hangHoa.maHangHoa}</td>
                <td>${hangHoa.tenHangHoa}</td>
                <td>${hangHoa.soLuong}</td>
                <td>${hangHoa.ghiChu || "Kh√¥ng c√≥ ghi ch√∫"}</td>
                <td>
                    <button onclick="updateGhiChu('${hangHoa.id}')">üìù S·ª≠a ghi ch√∫</button>
                    <button onclick="deleteGoods('${hangHoa.id}')">‚ùå X√≥a</button>
                </td>
            </tr>
        `;
        tableBody.innerHTML += row;
    });
}

// üîπ Th√™m h√†ng h√≥a m·ªõi
async function createGoods() {
    const maHangHoa = document.getElementById("maHangHoa").value.trim();
    const tenHangHoa = document.getElementById("tenHangHoa").value.trim();
    const soLuong = document.getElementById("soLuong").value.trim();
    const ghiChu = document.getElementById("ghiChu").value.trim();

    if (maHangHoa.length !== 9) {
        alert("M√£ h√†ng h√≥a ph·∫£i c√≥ ƒë√∫ng 9 k√Ω t·ª±!");
        return;
    }

    const newGoods = { 
        maHangHoa, 
        tenHangHoa, 
        soLuong: parseInt(soLuong) || 0, // N·∫øu r·ªóng, set m·∫∑c ƒë·ªãnh l√† 0
        ghiChu 
    };

    console.log("D·ªØ li·ªáu g·ª≠i l√™n API:", newGoods); // üëÄ Ki·ªÉm tra d·ªØ li·ªáu

    try {
        const response = await fetch(apiUrl, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(newGoods)
        });

        console.log("Ph·∫£n h·ªìi t·ª´ API:", response);

        if (!response.ok) {
            const errorText = await response.text();
            throw new Error(`L·ªói API: ${response.status} - ${errorText}`);
        }

        alert("Th√™m h√†ng h√≥a th√†nh c√¥ng!");
        fetchGoods(); // Load l·∫°i danh s√°ch sau khi th√™m
    } catch (error) {
        console.error("L·ªói khi th√™m h√†ng h√≥a:", error);
        alert("L·ªói khi th√™m h√†ng h√≥a: " + error.message);
    }
}


// üîπ X√≥a h√†ng h√≥a
async function deleteGoods(id) {
    if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a h√†ng h√≥a n√†y?")) {
        try {
            const response = await fetch(`${apiUrl}${id}`, { method: "DELETE" });

            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`L·ªói API: ${response.status} - ${errorText}`);
            }

            alert("X√≥a h√†ng h√≥a th√†nh c√¥ng!");
            fetchGoods(); // Load l·∫°i danh s√°ch sau khi x√≥a
        } catch (error) {
            console.error("L·ªói khi x√≥a h√†ng h√≥a:", error);
            alert("L·ªói khi x√≥a h√†ng h√≥a: " + error.message);
        }
    }
}

// üîπ C·∫≠p nh·∫≠t ghi ch√∫
// üîπ C·∫≠p nh·∫≠t ghi ch√∫
async function updateGhiChu(id) {
    const newNote = prompt("Nh·∫≠p ghi ch√∫ m·ªõi:");
    if (newNote !== null) {
        try {
            const response = await fetch(`${apiUrl}${id}/ghi-chu`, {
                method: "PATCH",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(newNote) // Ch·ªâ g·ª≠i chu·ªói, kh√¥ng b·ªçc trong object
            });

            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`L·ªói API: ${response.status} - ${errorText}`);
            }

            alert("C·∫≠p nh·∫≠t ghi ch√∫ th√†nh c√¥ng!");
            fetchGoods(); // Load l·∫°i danh s√°ch sau khi c·∫≠p nh·∫≠t
        } catch (error) {
            console.error("L·ªói khi c·∫≠p nh·∫≠t ghi ch√∫:", error);
            alert("L·ªói khi c·∫≠p nh·∫≠t ghi ch√∫: " + error.message);
        }
    }
}


// G·ªçi API ngay khi trang t·∫£i xong
window.onload = fetchGoods;
